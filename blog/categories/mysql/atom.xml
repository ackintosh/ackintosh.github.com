<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: MySQL | 暁 [stfuawsc]]]></title>
  <link href="http://ackintosh.github.io/blog/categories/mysql/atom.xml" rel="self"/>
  <link href="http://ackintosh.github.io/"/>
  <updated>2013-06-11T21:42:30+09:00</updated>
  <id>http://ackintosh.github.io/</id>
  <author>
    <name><![CDATA[Ackintosh]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[MySQLでインデックスあり・なしの検索速度を比較してみました。]]></title>
    <link href="http://ackintosh.github.io/blog/2012/08/26/compared-the-index-with-and-without/"/>
    <updated>2012-08-26T11:14:00+09:00</updated>
    <id>http://ackintosh.github.io/blog/2012/08/26/compared-the-index-with-and-without</id>
    <content type="html"><![CDATA[<p>usersとfavoritesが１対多になるようにして、
indexの設定あり・なしの2つのDBを用意して比較しました。<br/>
予め、<br/>
usersは 100,000件<br/>
favoritesに300,000件のレコードを用意しました。</p>

<!-- more -->


<h2>indexなし</h2>

<p>・テーブル作成</p>

<pre><code>create table users(
id int(11) not null primary key auto_increment,
name varchar(40) not null
) engine=innodb;

create table favorites(
user_id int(11) not null,
favorite_name varchar(40) not null
) engine=innodb;
</code></pre>

<p>・select<br/>
<img src="https://dl.dropbox.com/u/22083548/octopress/20120826/select_noindex.png" alt="select結果(indexなし)" /></p>

<p>・explain<br/>
<img src="https://dl.dropbox.com/u/22083548/octopress/20120826/explain_noindex.png" alt="explain(indexなし)" /></p>

<h2>indexあり</h2>

<p>・テーブル作成</p>

<pre><code>create table users(
id int(11) not null primary key auto_increment,
name varchar(40) not null
) engine=innodb;

create table favorites(
user_id int(11) not null,
favorite_name varchar(40) not null,
foreign key(user_id) references users(id)
) engine=innodb;
</code></pre>

<p>・select<br/>
<img src="https://dl.dropbox.com/u/22083548/octopress/20120826/select_index.png" alt="select結果(indexあり)" /></p>

<p><img src="https://dl.dropbox.com/u/22083548/octopress/20120826/select_index_phpmyadmin.png" alt="select結果(phpmyadmin)" /></p>

<p>・explain
<img src="https://dl.dropbox.com/u/22083548/octopress/20120826/explain_index.png" alt="explain(indexあり)" /></p>

<h2>結果</h2>

<ul>
<li>indexなし<br/>
クエリ実行時間 0.38  秒</li>
<li>indexあり<br/>
クエリ実行時間 0.0005秒</li>
</ul>


<p>explainの結果から、indexがないと
テーブルのフルスキャンが発生してしまっていることがわかりました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP5.3以降、mysql拡張モジュールは非推奨]]></title>
    <link href="http://ackintosh.github.io/blog/2012/07/27/deprecated-php-mysql-extension/"/>
    <updated>2012-07-27T19:37:00+09:00</updated>
    <id>http://ackintosh.github.io/blog/2012/07/27/deprecated-php-mysql-extension</id>
    <content type="html"><![CDATA[<h2>代替として、mysqli拡張モジュールやPDO(PHP Data Object)ドライバが用意されている。</h2>

<ul>
<li><p>mysqli拡張モジュール<br/>
<a href="http://php.net/manual/ja/book.mysqli.php">http://php.net/manual/ja/book.mysqli.php</a></p></li>
<li><p>PDO_MYSQL<br/>
<a href="http://www.php.net/manual/ja/ref.pdo-mysql.php">http://www.php.net/manual/ja/ref.pdo-mysql.php</a></p></li>
</ul>


<p>古いmysql関数も含めた3つの機能の比較表がありました。
<a href="http://www.php.net/manual/ja/mysqlinfo.api.choosing.php">http://www.php.net/manual/ja/mysqlinfo.api.choosing.php</a></p>

<p>新しいモジュールでは、
* OOPインターフェース
* プリペアドステートメント
* ストアドプロシージャ
* トランザクション<br/>
をAPIレベルでサポートしている。</p>

<h2>オブジェクト指向型が使えるのでラッパークラスを定義できる</h2>

<p><a href="http://php.net/manual/ja/mysqli.real-connect.php">http://php.net/manual/ja/mysqli.real-connect.php</a></p>

<pre><code>class OriginalMysqli extends mysqli
{
    …
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQL(InnoDB)でバルクinsertのベンチマークとってみました]]></title>
    <link href="http://ackintosh.github.io/blog/2012/07/18/benchmark-of-bulk-insert/"/>
    <updated>2012-07-18T00:33:00+09:00</updated>
    <id>http://ackintosh.github.io/blog/2012/07/18/benchmark-of-bulk-insert</id>
    <content type="html"><![CDATA[<h2>テーブル作成</h2>

<pre><code>create table test (
id int(11) unsigned auto_increment primary key,
name varchar(255) not null,
created datetime not null
);
</code></pre>

<h2>通常のinsert文</h2>

<pre><code>insert into test (name, created) values ('name1', now());
insert into test (name, created) values ('name2', now());
・・・ 10,000回
</code></pre>

<p>結果<br/>
<em>6.39秒</em></p>

<h2>バルクinsert</h2>

<pre><code>insert into test (name, created) values ('name1', now()), ('name2', now()) ・・・
・・・10,000回
</code></pre>

<p>結果<br/>
<em>0.20秒</em></p>

<p>全然違う(・∀・)</p>
]]></content>
  </entry>
  
</feed>
