<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[My Octopress Blog]]></title>
  <link href="http://ackintosh.github.com/atom.xml" rel="self"/>
  <link href="http://ackintosh.github.com/"/>
  <updated>2012-07-10T23:25:34+09:00</updated>
  <id>http://ackintosh.github.com/</id>
  <author>
    <name><![CDATA[Ackintosh]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Markdown記法のパーサー　markdown-jsを使う]]></title>
    <link href="http://ackintosh.github.com/blog/2012/07/10/use-the-markdown-js/"/>
    <updated>2012-07-10T22:38:00+09:00</updated>
    <id>http://ackintosh.github.com/blog/2012/07/10/use-the-markdown-js</id>
    <content type="html"><![CDATA[<p><img src="https://dl.dropbox.com/u/22083548/octopress/markdown-to-html.jpeg" alt="markdown2HTML" /></p>

<p>最近githubやOctopressを使うようになってきたので、markdownをしっかり覚えたい今日この頃です。<br/>
ふと、Javascriptでmarkdown→HTMLに変換してくれるのはないかなと気になったので
今回markdown-jsというのを使ってみました。</p>

<p><strong>markdown-js</strong><br/>
<a href="https://github.com/evilstreak/markdown-js">https://github.com/evilstreak/markdown-js</a></p>

<h2>例</h2>

<pre><code>var md = "#markdown";
console.dir(window.markdown.toHTML(md));
</code></pre>

<h2>リアルタイムにmarkdown→HTMLに変換してみる</h2>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
    &lt;title&gt;markdown 2 html&lt;/title&gt;
    &lt;script type="text/javascript" src="./lib/markdown.js"&gt;&lt;/script&gt;
    &lt;script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;textarea id="markdown"&gt;&lt;/textarea&gt;
    &lt;div id="html"&gt;&lt;/div&gt;
    &lt;script type="text/javascript"&gt;
        $('#markdown').keyup(function (e){
        $('#html').html(window.markdown.toHTML($('#markdown').val()));
        });
    &lt;/script&gt;
&lt;/body&gt;
</code></pre>

<p></html></p>

<h2>参考URL</h2>

<p>にのせき日記　<a href="http://d.hatena.ne.jp/ninoseki/20110620/1308574793">Javascript製Markdown記法パーサー、markdown-js</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Herokuでアプリを作る]]></title>
    <link href="http://ackintosh.github.com/blog/2012/07/09/make-an-app-in-heroku/"/>
    <updated>2012-07-09T23:04:00+09:00</updated>
    <id>http://ackintosh.github.com/blog/2012/07/09/make-an-app-in-heroku</id>
    <content type="html"><![CDATA[<p><img src="https://dl.dropbox.com/u/22083548/octopress/heroku.jpeg" alt="heroku" /></p>

<p><strong>Heroku</strong><br/>
<a href="http://www.heroku.com/">http://www.heroku.com/</a></p>

<p>ユーザー登録後、Herokuのgemをインストールする。</p>

<pre><code>$ gem install heroku
</code></pre>

<p>herokuの利用に必要なコマンドがインストールされる。</p>

<h2>作成したアプリ一覧を確認</h2>

<pre><code>$ heroku list
</code></pre>

<h2>新規Railsアプリを作成</h2>

<pre><code>$ rails new newApp
</code></pre>

<h2>アプリの起動確認</h2>

<pre><code>$ cd newApp
$ rails s
</code></pre>

<h2>git初期化</h2>

<pre><code>$ git init
$ git add .
$ git commit -m "initialize"
</code></pre>

<h2>Herokuで動かす</h2>

<pre><code>$ heroku create appname
</code></pre>

<p><a href="http://ppworks.hatenablog.jp/entry/2012/03/04/141951">macを買って、今すぐherokuでruby1.9.3 + rails3.2しよう！</a> から引用させていただきます。<br/>
必要最低限のgemを記述。</p>

<pre><code>$ curl https://raw.github.com/gist/1970532/376b6a26ed936ac43cad0b17a64512f5c0216a50/Gemifile &gt; Gemfile
$ rm -f Gemfile.lock
$ bundle install --without production
$ git add -A
$ git commit -m 'Update Gemfile'
</code></pre>

<p>中身はこんな感じ。<br/>
herokuでは、PostgreSQL使うので、pgを指定したり、developmentでしか使わないものはそこに移動とかです。</p>

<pre><code>source 'https://rubygems.org'

gem 'rails', '3.2.2'
gem 'jquery-rails'

group :assets do
  gem 'sass-rails',   '~&gt; 3.2.3'
  gem 'coffee-rails', '~&gt; 3.2.1'
  gem 'uglifier', '&gt;= 1.0.3'
end

group :test, :development do
  gem 'sqlite3'
  gem 'heroku'
end

group :production do
  gem 'pg'
  gem 'thin'
end
</code></pre>

<p>Herokuにデプロイ</p>

<pre><code>$ git push heroku master
$ heroku open
</code></pre>

<p>参考URL<br/>
<a href="http://ppworks.hatenablog.jp/entry/2012/03/04/141951">macを買って、今すぐherokuでruby1.9.3 + rails3.2しよう！</a><br/>
<a href="http://gihyo.jp/dev/serial/01/heroku/0002?page=2">Herokuで作るFacebookアプリ</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopressにコメント機能を追加する]]></title>
    <link href="http://ackintosh.github.com/blog/2012/07/08/add-comments-feature-to-octopress/"/>
    <updated>2012-07-08T14:46:00+09:00</updated>
    <id>http://ackintosh.github.com/blog/2012/07/08/add-comments-feature-to-octopress</id>
    <content type="html"><![CDATA[<p><img src="https://dl.dropbox.com/u/22083548/octopress/disqus.jpeg" alt="DISQUS" /></p>

<p>OctopressはデフォルトでDISQUSをサポートしているので、<br/>
DISQUSにサイトを登録して、_config.ymlに設定するだけでコメントを利用できる。</p>

<p><strong>DISQUS</strong><br/>
<a href="http://disqus.com/">http://disqus.com/</a></p>

<p>_config.ymlに、DISQUSで登録したshortnameを設定する。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>disqus_short_name: your shortname</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rbenvを使う]]></title>
    <link href="http://ackintosh.github.com/blog/2012/07/08/use-rbenv/"/>
    <updated>2012-07-08T03:11:00+09:00</updated>
    <id>http://ackintosh.github.com/blog/2012/07/08/use-rbenv</id>
    <content type="html"><![CDATA[<h2>インストール可能な一覧</h2>

<p>$ rbenv install</p>

<h2>インストール</h2>

<p>$ rbenv install 1.9.2-p320</p>

<h2>インストールされているバージョンを確認</h2>

<p>$ rbenv versions</p>

<h2>通常使うバージョンを指定</h2>

<p>$ rbenv global 1.9.3-p194
$ rbenv rehash</p>

<h2>不要になったRubyを削除</h2>

<p>$ rbenv -rf .rbenv/versions/1.8.6-p420</p>

<h2>ディレクトリで使うrubyのバージョンを固定する</h2>

<p>$ rbenv local 1.9.2-p320
→ .rbenv-version ファイルが作られて、その中に選択したバージョンが書き込まれる</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress + github でブログを始める]]></title>
    <link href="http://ackintosh.github.com/blog/2012/07/08/octopress-plus-github/"/>
    <updated>2012-07-08T01:56:00+09:00</updated>
    <id>http://ackintosh.github.com/blog/2012/07/08/octopress-plus-github</id>
    <content type="html"><![CDATA[<p><img src="https://dl.dropbox.com/u/22083548/octopress/octopress.png" alt="OCTOPRESS" /></p>

<p><strong>Octopress</strong></p>

<p><a href="http://octopress.org/" title="Octopress">http://octopress.org/</a></p>

<p><strong>github</strong></p>

<p><a href="https://github.com/" title="Octopress">https://github.com/</a></p>

<h2>githubでリポジトリを作成</h2>

<p>リポジトリ名がURLになる。</p>

<p>http://{ユーザー名}.github.com/{リポジトリ名}/</p>

<h2>Octopressインストール</h2>

<ul>
<li><p>2012/07/08 時点ではRuby 1.9.2でしか動作しないようなので
rbenv等で環境を用意する。</p></li>
<li><p>Octopress用のディレクトリで使うRubyのバージョンを固定する</p></li>
</ul>


<p>$ rubyenv local 1.9.2-p320
→ .rbenv-version ファイルが作られて、その中に選択したバージョンが書き込まれる</p>

<p><em>Octopress Setup</em></p>

<p><a href="http://octopress.org/docs/setup/">http://octopress.org/docs/setup/</a></p>

<h2>Octpressの設定</h2>

<p>_config.yml を編集する</p>

<h2>Github Pagesにデプロイ</h2>

<p><em>Deploying to Github Pages</em></p>

<p><a href="http://octopress.org/docs/deploying/github/">http://octopress.org/docs/deploying/github/</a></p>

<ul>
<li>投稿作成</li>
</ul>


<p>$ rake new_post[&#8220;投稿タイトル&#8221;]</p>

<p>source/_posts/YYYY-MM-DD-{投稿タイトル}.markdown を編集</p>

<ul>
<li>HTML生成</li>
</ul>


<p>$ rake generate</p>

<ul>
<li>プレビュー(localhost:4000)</li>
</ul>


<p>$ rake preview</p>

<p>編集内容は即時反映される</p>

<ul>
<li>ブログにアップ</li>
</ul>


<p>$ rake deploy</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rvenvでrubyをインストールする時にエラー]]></title>
    <link href="http://ackintosh.github.com/blog/2012/07/08/rvenvderubywoinsutorusurushi-niera/"/>
    <updated>2012-07-08T00:01:00+09:00</updated>
    <id>http://ackintosh.github.com/blog/2012/07/08/rvenvderubywoinsutorusurushi-niera</id>
    <content type="html"><![CDATA[<h3>rvenvでrubyをインストールする時に下記のエラーがでる場合</h3>

<p>readline.c: In function ‘username_completion_proc_call’:<br/>
readline.c:1386: error: ‘username_completion_function’ undeclared (first use in this function)<br/>
readline.c:1386: error: (Each undeclared identifier is reported only once<br/>
readline.c:1386: error: for each function it appears in.)<br/>
make[1]: *** [readline.o] Error 1<br/>
make: *** [mkmain.sh] Error 1</p>

<h3>下記実行して再トライ</h3>

<p>$ export CONFIGURE_OPTS=&#8221;&#8211;with-arch=i386 &#8211;with-readline-dir=/usr/local/Cellar/readline/6.2.2&#8221;</p>
]]></content>
  </entry>
  
</feed>
