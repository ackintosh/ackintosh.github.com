<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 暁</title>
    <link>http://ackintosh.github.io/post/</link>
    <description>Recent content in Posts on 暁</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2012</copyright>
    <lastBuildDate>Sat, 20 Aug 2016 17:01:43 +0900</lastBuildDate>
    <atom:link href="http://ackintosh.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>2016/08/20 ポインタへの格下げ</title>
      <link>http://ackintosh.github.io/blog/2016/08/20/2016-08-20/</link>
      <pubDate>Sat, 20 Aug 2016 17:01:43 +0900</pubDate>
      
      <guid>http://ackintosh.github.io/blog/2016/08/20/2016-08-20/</guid>
      <description>&lt;p&gt;近くのドトールでもくもくとCを触る。&lt;/p&gt;

&lt;p&gt;コンパイラ入門を2章まで読んだ。コンパイラの構成（フロントエンド、バックエンド）の解説と、例題として実装していく言語SL/0, SL/1の仕様の説明。めっちゃシンプルな仕様なので自分のような超初心者にピッタリ。まだ内容についていけている。&lt;/p&gt;

&lt;p&gt;Head First Cも2章の途中まで進んだ。途中、配列変数がポインタへ格下げされる仕様にハマったのでメモ。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;void f(char s[])
{
	// 関数に配列を渡すとポインタに格下げされ、配列のサイズについての情報を失うため
	// ポインタのサイズが出力される.
	// -&amp;gt; 8 (64bitマシンの場合)
	printf(&amp;quot;%lu\n&amp;quot;, sizeof(s));
	
	// コンパイル時に警告してくれる
	// blog.c:4:27: warning: sizeof on array function parameter will return size of &#39;char *&#39; instead of &#39;char []&#39; [-Wsizeof-array-argument]
}

int main()
{
	char s[] = &amp;quot;How big is it?&amp;quot;;

	// 配列変数が配列のサイズを保持しているため
	// 配列のサイズが出力される.
	// -&amp;gt; 15 (14文字 + 改行)
	printf(&amp;quot;%lu\n&amp;quot;, sizeof(s));

	f(s);
	
	return 0;
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>2016/08/17 集中力, コンパイラ</title>
      <link>http://ackintosh.github.io/blog/2016/08/17/2016-08-17/</link>
      <pubDate>Wed, 17 Aug 2016 19:24:09 +0900</pubDate>
      
      <guid>http://ackintosh.github.io/blog/2016/08/17/2016-08-17/</guid>
      <description>&lt;p&gt;夏休み最終日。&lt;/p&gt;

&lt;p&gt;Youtube でマリオメーカーの鬼畜ステージに挑戦している模様がライブ配信されていて、ステージの鬼畜っぷりとプレイヤーの超絶テクニックに見入ってしまった。高々とそびえ立つ針山を絶妙なタイミングの三段ジャンプでスレスレで飛び越えたり、バネを持った状態でジャンプして空中でそれを利用するというアクロバティックな動きに魅了された。&lt;/p&gt;

&lt;p&gt;アクションを少しでもミスすれば即死。1周するのに150秒くらいかかるコースを3周して、ようやくステージクリアという鬼畜ステージにプレイヤーは1時間以上 挑戦し続けてもまるで集中力が切れる様子がない。というよりリラックスしてプレイするように努めているようにも感じた。&lt;/p&gt;

&lt;p&gt;結局、見ている自分の集中力が切れた。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Head First C の1章をやった。LL言語、というか php ばかりの自分にとってはソースコードを自分でコンパイルする事すら新鮮でなんか楽しい。コンパイラを身近に感じられた。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://rebuild.fm/153/&#34;&gt;rebuild.fm #153&lt;/a&gt; で Rui Ueyama さんがコンパイラを実装した話をされていてとても興味深い。システムプログラミングの話は聴いていてワクワクする。宇宙の話を聴いてるときのワクワクに近いかもしれない。&lt;/p&gt;

&lt;p&gt;自分は、コンパイラを実装するのがどれほど大変なのかが理解できてない程度に無知なので、まずは大変さを理解する意味でコンパイラの実装に挑戦してみるのも良いかな。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Goアプリのデーモン化とデプロイの仕組み</title>
      <link>http://ackintosh.github.io/blog/2016/08/17/golang_deamonize_deploy/</link>
      <pubDate>Wed, 17 Aug 2016 12:40:37 +0900</pubDate>
      
      <guid>http://ackintosh.github.io/blog/2016/08/17/golang_deamonize_deploy/</guid>
      <description>

&lt;p&gt;夏休みのひとり開発合宿で、Go製の軽量WAF &lt;a href=&#34;https://echo.labstack.com/&#34;&gt;Echo&lt;/a&gt; を使ったアプリのデーモン化とデプロイの仕組みを作ってみたので雑だけどメモしておく。&lt;/p&gt;

&lt;p&gt;Goほぼ初心者、デプロイの仕組み作ったことない、という初めての事だらけの状態で試行錯誤しながら丸一日使ってめっちゃ疲れたけど勉強になった。hot deploy の仕組みが大変興味深いです。（&lt;a href=&#34;#参考記事:c89a01ea34ec3d3b965d2855f1d3c3d0&#34;&gt;参考記事&lt;/a&gt;）&lt;/p&gt;

&lt;p&gt;試行錯誤した結果、利用するツール・ライブラリは下記になった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;デーモン化&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://supervisord.org/&#34;&gt;supervisord&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;デプロイ&lt;br /&gt;
（githubに push したら アプリケーションサーバーが webhook 通知を受信してビルド・graceful restart する）&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/facebookgo/grace&#34;&gt;facebookgo/grace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mattn/gost&#34;&gt;mattn/gost&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;試行錯誤:c89a01ea34ec3d3b965d2855f1d3c3d0&#34;&gt;試行錯誤&lt;/h5&gt;

&lt;p&gt;試行錯誤や調査の結果、利用を見送ったもの。&lt;/p&gt;

&lt;p&gt;daemontools (プロセス管理)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;インストールが難しそう&lt;/li&gt;
&lt;li&gt;開発がアクティブじゃない&lt;/li&gt;
&lt;li&gt;パッチを当てないといけない様子&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;　→ supervisord の方がインストール楽だし、設定も簡単&lt;/p&gt;

&lt;p&gt;go-server-starter (ホットデプロイ)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;graceful shutdown に対応していない&lt;/li&gt;
&lt;li&gt;graceful shutdown に対応するために manners を使おうとすると、さらにソースコードに手をいれないといけない

&lt;ul&gt;
&lt;li&gt;Echo のレールから外れてしまう・レールに乗れなくなってしまう&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;　→ grace ならそれらが解決される。公式に&lt;a href=&#34;https://echo.labstack.com/recipes/graceful-shutdown&#34;&gt;サンプルコード&lt;/a&gt;もある。&lt;/p&gt;

&lt;h5 id=&#34;展望:c89a01ea34ec3d3b965d2855f1d3c3d0&#34;&gt;展望&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;ビルドサーバーを用意してバイナリを配布するかたちを作ってみたい&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/monochromegane/torokko&#34;&gt;monochromegane/torokko&lt;/a&gt; が気になる。

&lt;ul&gt;
&lt;li&gt;(&lt;a href=&#34;http://blog.monochromegane.com/blog/2015/08/16/deploy-golang-by-cargo/&#34;&gt;Goのデプロイを「もっと」簡単にする。ビルドプロキシCargo。改めTorokko。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;参考記事:c89a01ea34ec3d3b965d2855f1d3c3d0&#34;&gt;参考記事&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.yusuke.be/entry/2016/01/18/111838&#34;&gt;Golangを初めて本番投入したぜ！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://shogo82148.github.io/blog/2015/05/03/golang-graceful-restart/&#34;&gt;Go言語でGraceful Restartをする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.shibayu36.org/entry/2012/05/07/201556&#34;&gt;Server::Starterから学ぶhot deployの仕組み&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.livedoor.jp/sonots/archives/40248661.html&#34;&gt;「Server::Starterに対応するとはどういうことか」の補足&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://mattn.kaoriya.net/software/lang/go/20130918122901.htm&#34;&gt;Go言語でWebAppの運用に必要なN個のこと&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>2016/08/14 華の湯</title>
      <link>http://ackintosh.github.io/blog/2016/08/15/2016-08-14/</link>
      <pubDate>Mon, 15 Aug 2016 17:15:54 +0900</pubDate>
      
      <guid>http://ackintosh.github.io/blog/2016/08/15/2016-08-14/</guid>
      <description>&lt;p&gt;久しぶりに実家近くの日帰り温泉に行ってきた。&lt;/p&gt;

&lt;p&gt;場所は東武伊勢崎線 羽生駅 徒歩3分。ホテルに併設された温泉施設。&lt;/p&gt;

&lt;p&gt;源泉かけ流しの露天風呂やサウナ等ひととおり揃っていて、交通の便が良い割に周辺の他の温泉より混まないのでゆっくりできる。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;embedly-card&#34; data-card-key=&#34;916e111541fe433792c1330eb7eba55b&#34; data-card-type=&#34;article&#34;&gt;&lt;h4&gt;&lt;a href=&#34;http://www.route-inn.co.jp/hananoyu/index.html&#34;&gt;華のゆ｜羽生&lt;/a&gt;&lt;/h4&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//cdn.embedly.com/widgets/platform.js&#34; charset=&#34;UTF-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Pontaカードが使えるのでポイントが溜められて、10回来店ごとに無料券をもらえる。しかも無料券を使った場合も1回にカウントされるのでお得感がある。&lt;/p&gt;

&lt;p&gt;今日行ったらちょうど70回目の来店で、無料券をもらった。&lt;/p&gt;

&lt;p&gt;明日、東京に戻るついでに寄っていこう。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2016/08/12 Wi2 Premium</title>
      <link>http://ackintosh.github.io/blog/2016/08/12/2016-08-12/</link>
      <pubDate>Fri, 12 Aug 2016 15:30:49 +0900</pubDate>
      
      <guid>http://ackintosh.github.io/blog/2016/08/12/2016-08-12/</guid>
      <description>&lt;p&gt;夏休み3日目。　ではなく出勤。&lt;/p&gt;

&lt;p&gt;仕事が終わったあと、ファミレスで夕飯ついでにもくもくと昨日のつづき。&lt;/p&gt;

&lt;p&gt;wifi がとんでるカフェとかファミレスでよく見る &lt;code&gt;Wi2 Premiun&lt;/code&gt; というSSID。公衆無線LAN「Wi2」のサービスで、アドレス登録だけで無料で使えたり、場所によっては有料プラン加入者しか使えない場合(オプションエリア)がある。&lt;/p&gt;

&lt;p&gt;au でLTEフラットに申し込んでいるとオプションエリアでも無料で使えるということに最近気づいた。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;embedly-card&#34; data-card-key=&#34;916e111541fe433792c1330eb7eba55b&#34; data-card-type=&#34;article-full&#34;&gt;&lt;h4&gt;&lt;a href=&#34;https://service2.wi2.ne.jp/wi2was/userAgreement?crplanid=aumdpay&#34;&gt;ご利用条件｜公衆無線LANサービスWi2 300&lt;/a&gt;&lt;/h4&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//cdn.embedly.com/widgets/platform.js&#34; charset=&#34;UTF-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2016/08/11 Swift と Go</title>
      <link>http://ackintosh.github.io/blog/2016/08/11/2016-08-11/</link>
      <pubDate>Thu, 11 Aug 2016 14:56:22 +0900</pubDate>
      
      <guid>http://ackintosh.github.io/blog/2016/08/11/2016-08-11/</guid>
      <description>

&lt;p&gt;夏休み2日目。&lt;/p&gt;

&lt;h5 id=&#34;午前は-swift-の続き:7c8787ac68b82ab2b2fa23384bd6e453&#34;&gt;午前は swift の続き&lt;/h5&gt;

&lt;p&gt;オプショナル型について調べて、下記の記事がわかりやすかった。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;embedly-card&#34; data-card-key=&#34;916e111541fe433792c1330eb7eba55b&#34; data-card-type=&#34;article-full&#34;&gt;&lt;h4&gt;&lt;a href=&#34;http://qiita.com/maiki055/items/b24378a3707bd35a31a8&#34;&gt;どこよりも分かりやすいSwiftの&amp;rdquo;?&amp;ldquo;と&amp;rdquo;!&amp;rdquo; - Qiita&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;と、swiftがリリースされてから言われてますがswift初心者からすると厄介極まりないです。 ?と!の使い分けが分からずとりあえず&amp;rdquo;?&amp;ldquo;をつける、ソースコードを書いていたら急にXcodeに怒られ、エラーに導かれるままに&amp;rdquo;!&amp;ldquo;をつける&amp;hellip; こんな経験がある方がいるのではないでしょうか。 この記事は そんなオプショナルがフワフワした状態を脱却することを目的としています。 &amp;hellip;&lt;/p&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//cdn.embedly.com/widgets/platform.js&#34; charset=&#34;UTF-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;昨日・今日で swift の構文とかアプリの作り方をなんとなく把握したので、カメラで動画をとって保存するアプリを作ってみた。といってもほぼ↓を &lt;del&gt;パク&lt;/del&gt; 参考にさせていただいた。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;embedly-card&#34; data-card-key=&#34;916e111541fe433792c1330eb7eba55b&#34; data-card-type=&#34;article&#34;&gt;&lt;h4&gt;&lt;a href=&#34;http://qiita.com/takecian/items/2cee0f958c8bed00a69a&#34;&gt;Swift で動画を撮影・保存するサンプル その１ - シンプル編 - Qiita&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;やることは Objective-c でやる内容を Swift で書くだけではあります。100 行くらいでできましたのでメモ。最後にコードを一式貼り付けています。 やること 必要な framework の追加 Session, Device の準備 プレビュー画面の生成 録画ボタンで録画開始 停止ボタンで録画停止、ライブラリに保存 必要な framework の追加 AVFoundation と AssetsLibrary を追加します。 Sessi&amp;hellip;&lt;/p&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//cdn.embedly.com/widgets/platform.js&#34; charset=&#34;UTF-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ALAssetsLibrary&lt;/code&gt; が iOS9 で非推奨になったので代わりに &lt;code&gt;PHPhotoLibrary&lt;/code&gt; を使った。&lt;/p&gt;

&lt;h5 id=&#34;午後は-go:7c8787ac68b82ab2b2fa23384bd6e453&#34;&gt;午後は Go&lt;/h5&gt;

&lt;p&gt;API サーバーを作りはじめた。軽量な WAF でググッてみたけど違いがよくわからないしとにかくサクッと始めたかったので、ドキュメントが一番わかりやすい &lt;a href=&#34;https://echo.labstack.com/&#34; target=&#34;_blank&#34;&gt;Echo&lt;/a&gt; にした。&lt;br /&gt;
ファイルアップロードとかレシピ集があってとても良かった。&lt;/p&gt;

&lt;p&gt;Go のデプロイってどうすればいいんだろう。ググった感じでは、まだベストプラクティスはなさそう。Go でサービスを運用してる各社はどうしてるのか気になる。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2016/08/10 iPhoneアプリ開発に入門</title>
      <link>http://ackintosh.github.io/blog/2016/08/10/2016-08-10/</link>
      <pubDate>Wed, 10 Aug 2016 23:29:00 +0900</pubDate>
      
      <guid>http://ackintosh.github.io/blog/2016/08/10/2016-08-10/</guid>
      <description>&lt;p&gt;夏休み1日目。&lt;/p&gt;

&lt;p&gt;swift はリリース当初に playground で少しさわった程度。まずは twitter で教えていただいた本で構文等をざっと勉強した。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;embedly-card&#34; data-card-key=&#34;916e111541fe433792c1330eb7eba55b&#34;&gt;&lt;h4&gt;&lt;a href=&#34;https://www.amazon.co.jp/gp/product/B017SW4MG0/ref=oh_aui_d_detailpage_o00_?ie=UTF8&amp;psc=1&#34;&gt;詳細！Swift2 iPhoneアプリ開発 入門ノート Swift 2+Xcode 7対応&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Amazon.co.jp： 詳細！Swift2 iPhoneアプリ開発 入門ノート Swift 2+Xcode 7対応 eBook: 大重 美幸: Kindleストア&lt;/p&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//cdn.embedly.com/widgets/platform.js&#34; charset=&#34;UTF-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2016/08/07 toe</title>
      <link>http://ackintosh.github.io/blog/2016/08/07/2016-08-07/</link>
      <pubDate>Sun, 07 Aug 2016 17:29:28 +0900</pubDate>
      
      <guid>http://ackintosh.github.io/blog/2016/08/07/2016-08-07/</guid>
      <description>&lt;p&gt;知人に教えてもらってハマったバンド。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;embedly-card&#34; data-card-key=&#34;916e111541fe433792c1330eb7eba55b&#34; data-card-type=&#34;article-full&#34;&gt;&lt;h4&gt;&lt;a href=&#34;http://www.toe.st/&#34;&gt;toe&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;(null)&lt;/p&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//cdn.embedly.com/widgets/platform.js&#34; charset=&#34;UTF-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;不思議な幻想的な音が心地良い。
海外でも活躍していて、いまは&lt;/p&gt;

&lt;p&gt;ドラムの柏倉隆史さんは the HIATUS 等でも叩いてる方。この人のドラムめっちゃかっこいい。&lt;/p&gt;

&lt;p&gt;Youtube でライブ動画を検索して、しばらく見入ってしまった。&lt;/p&gt;

&lt;iframe width=&#34;420&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/e0RWnzd_b_k&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;公式のネットショップがあったのでざっと商品を眺めてたら&lt;br /&gt;
ちょうど欲しかったグレーのUネックTシャツがあったので購入。（しかも特典ステッカー付き）&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;embedly-card&#34; data-card-key=&#34;916e111541fe433792c1330eb7eba55b&#34; data-card-type=&#34;article&#34;&gt;&lt;h4&gt;&lt;a href=&#34;http://believemusicstore.com/?pid=67227166&#34;&gt;toe_TORCH ON ENSEMBLES_U_NECK_Tee - Believe Music STORE OFFICIAL WEBSITE&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;バンドやイベントオフィシャルグッズ販売サイトBelieve Music STORE。渋さ知らズオーケストラ、toe、the band apart、mouse on the keys、COKEHEAD HIPSTERS、54-71他多数のグッズを扱っています！海外バンドやここでしか扱っていないグッズもあり！&lt;/p&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//cdn.embedly.com/widgets/platform.js&#34; charset=&#34;UTF-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;カート画面で気づいたけど、なんとカラーミーショップを使っていただいている！&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;embedly-card&#34; data-card-key=&#34;916e111541fe433792c1330eb7eba55b&#34; data-card-type=&#34;article&#34;&gt;&lt;h4&gt;&lt;a href=&#34;http://believemusicstore.com/?mode=cate&amp;cbid=888540&amp;csid=0&amp;sort=n&#34;&gt;toe - Believe Music STORE OFFICIAL WEBSITE&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;バンドやイベントオフィシャルグッズ販売サイトBelieve Music STORE。渋さ知らズオーケストラ、toe、the band apart、mouse on the keys、COKEHEAD HIPSTERS、54-71他多数のグッズを扱っています！海外バンドやここでしか扱っていないグッズもあり！&lt;/p&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//cdn.embedly.com/widgets/platform.js&#34; charset=&#34;UTF-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ngx_mruby でシャドウプロキシ</title>
      <link>http://ackintosh.github.io/blog/2016/08/05/shadow_proxy-using-ngx_mruby/</link>
      <pubDate>Fri, 05 Aug 2016 15:34:21 +0900</pubDate>
      
      <guid>http://ackintosh.github.io/blog/2016/08/05/shadow_proxy-using-ngx_mruby/</guid>
      <description>

&lt;p&gt;最近 ngx_mruby をいじり始めて「ビルドできた！」「おぉ、簡単にWebサーバーの振る舞いを変えられる！」ところまでいったので、&lt;br /&gt;
何を作ろうかと考えて初めに思いついたのがシャドウプロキシでした。&lt;/p&gt;

&lt;p&gt;とはいえシャドウプロキシが何なのかはよくわかっていなかったので予め下記を参考にさせていただきました。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;シャドウプロキシサーバーの実装&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cookpad/kage&#34; target=&#34;_blank&#34;&gt;kage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kentaro/delta&#34; target=&#34;_blank&#34;&gt;delta&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lestrrat/p5-Geest&#34; target=&#34;_blank&#34;&gt;Geest&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;シャドウプロキシの仕組み&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/toyama0919/items/ae4bc88423317e6668b1&#34; target=&#34;_blank&#34;&gt;fluentdで本番環境を再現する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/kamatama_41/items/dc12d5127e7de9a1849b&#34; target=&#34;_blank&#34;&gt;Shadow Proxyのご紹介 at Quipper&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;まとめると、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;本番のリクエストをバックエンド（Shadow環境）に複製することで、本番に限りなく近い状態を再現できる。&lt;/li&gt;
&lt;li&gt;それによって、いきなり本番投入するのが怖い何かを安全に試運転させてバグの検知ができる。&lt;/li&gt;
&lt;li&gt;心穏やかにリリースに臨める。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;mruby-ngx-shadow-proxy:2a2046fa3e83942b1b485d7fe68a5a69&#34;&gt;mruby-ngx-shadow_proxy&lt;/h4&gt;

&lt;p&gt;ざっくりした実装しかしていませんが、github で公開しています。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;embedly-card&#34; data-card-key=&#34;916e111541fe433792c1330eb7eba55b&#34; data-card-type=&#34;article&#34;&gt;&lt;h4&gt;&lt;a href=&#34;https://github.com/ackintosh/mruby-ngx-shadow_proxy&#34;&gt;ackintosh/mruby-ngx-shadow_proxy&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;mruby-ngx-shadow_proxy - HTTP shadow proxy using ngx_mruby.&lt;/p&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//cdn.embedly.com/widgets/platform.js&#34; charset=&#34;UTF-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;mrbgem を作るのは初めてだったのですが、&lt;a href=&#34;https://github.com/matsumoto-r/mruby-mrbgem-template&#34; target=&#34;_blank&#34;&gt;mruby-mrbgem-template&lt;/a&gt; を使うと必要なディレクトリ構造やファイルを生成してくれるので便利でした。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;embedly-card&#34; data-card-key=&#34;916e111541fe433792c1330eb7eba55b&#34; data-card-type=&#34;article-full&#34;&gt;&lt;h4&gt;&lt;a href=&#34;http://blog.matsumoto-r.jp/?p=3923&#34;&gt;mrubyの拡張モジュールであるmrbgemのテンプレートを自動で生成するmrbgem作った&lt;/a&gt;&lt;/h4&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//cdn.embedly.com/widgets/platform.js&#34; charset=&#34;UTF-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h5 id=&#34;試行錯誤:2a2046fa3e83942b1b485d7fe68a5a69&#34;&gt;試行錯誤&lt;/h5&gt;

&lt;p&gt;実装を始めた当初は、上記に挙げたサーバーのように ngx_mruby で本番とバックエンドそれぞれに並列にリクエストを複製しようとしたのですが下記理由で別の方法にしました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;漠然とした違和感（何か ngx_mruby らしい方法があるのではないか）&lt;/li&gt;
&lt;li&gt;できるだけフロントに手を入れたくない&lt;/li&gt;
&lt;li&gt;そもそも mruby がスレッドセーフではない

&lt;ul&gt;
&lt;li&gt;この辺がまだ理解できていないので語弊があるかもしれません&lt;/li&gt;
&lt;li&gt;参考 &lt;a href=&#34;https://github.com/mruby/mruby/issues/1657&#34;&gt;https://github.com/mruby/mruby/issues/1657&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;実際に &lt;a href=&#34;https://github.com/mattn/mruby-thread&#34; target=&#34;_blank&#34;&gt;mattn/mruby-thread&lt;/a&gt; を使って試行錯誤していたのですがスレッド間のデータのやりとりがうまくできませんでした&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;なので最終的に、バックエンドにリクエストを複製するだけにしました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/ackintosh/mruby-ngx-shadow_proxy#example&#34; target=&#34;_blank&#34;&gt;README&lt;a/&gt;に例を載せていますが、&lt;br /&gt;
ngx_mruby には&lt;a href=&#34;https://github.com/matsumoto-r/ngx_mruby/wiki/Directives#ngx_mruby-http-module-directives&#34; target=&#34;_blank&#34;&gt;いろんなディレクティブ&lt;/a&gt;があって nginx のフェーズにフックして制御できるようになっているので、
mruby_log_handler というディレクティブを使うことで、クライアントにレスポンスを返した後のフェーズでバックエンドにリクエストを複製するようにしています。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2016/08/01 プログラミング言語Go</title>
      <link>http://ackintosh.github.io/blog/2016/08/02/2016-08-01/</link>
      <pubDate>Tue, 02 Aug 2016 01:31:52 +0900</pubDate>
      
      <guid>http://ackintosh.github.io/blog/2016/08/02/2016-08-01/</guid>
      <description>&lt;p&gt;社内のプログラミング言語Goの読書会にここ数回参加できていなかったので自習。&lt;/p&gt;

&lt;p&gt;1.2 コマンドライン引数&lt;/p&gt;

&lt;p&gt;echoを実装することを通して、スライス・ループ・文字列連結などを学んだ。&lt;/p&gt;

&lt;p&gt;文字列変数の宣言方法についての解説をメモしておく。
宣言方法はいくつかあるが、ケースによって最適な方法が異なる。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;関数内だけで使う(スコープが狭い)変数は省略変数宣言 ( s := &amp;ldquo;aaa&amp;rdquo; )&lt;/li&gt;
&lt;li&gt;初期値が重要なことを伝えるには明示的な初期化 ( var s string = &amp;ldquo;aaa&amp;rdquo; )&lt;/li&gt;
&lt;li&gt;初期値が問題とならないことを伝えるには暗黙の初期化 ( var s string )&lt;/li&gt;
&lt;li&gt;(var s = &amp;ldquo;&amp;rdquo; ) は複数の変数を宣言する時を除いてほとんど使われない&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;本の内容とは関係ないけど、
vim で .go ファイルを保存するときに&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vim-go: goimports does not support srcdir.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;というエラーがでてたけど&lt;/p&gt;

&lt;p&gt;:GoUpdateBinaries&lt;/p&gt;

&lt;p&gt;を実行したら解決した。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2016/07/31 コンプレックス</title>
      <link>http://ackintosh.github.io/blog/2016/07/31/2016-07-31/</link>
      <pubDate>Sun, 31 Jul 2016 16:53:50 +0900</pubDate>
      
      <guid>http://ackintosh.github.io/blog/2016/07/31/2016-07-31/</guid>
      <description>&lt;p&gt;最近、情報系の学校をでている方々が学生時代にどんな事を勉強していたのか気になってる。&lt;/p&gt;

&lt;p&gt;先日、大学院を出ている方から聞いたのは、ホワイトボードを研究していたとのこと。&lt;br /&gt;
とある議論をしている間のホワイトボードを動画撮影・解析して、書かれたワードがホワイトボードに残っている時間で重要度を判定（長い時間ホワイトボードに残っているのは重要）するプログラムを書いていたとのこと。&lt;/p&gt;

&lt;p&gt;他にも色々な処理をやっていたそうですが自分は話に追いつけなかった。&lt;br /&gt;
けど話を聞いていてすごく面白かった。&lt;/p&gt;

&lt;p&gt;自分は音楽系の出身なので、情報系のバックグラウンドが無いのでそこをコンプレックスに感じている。いまの職場は本当にレベルが高くて、勉強する人たちばかりだし、優秀な新卒もバンバン入ってくるので、余計に劣等感を感じる。&lt;/p&gt;

&lt;p&gt;でも、そんな環境に身を投じたくて転職したので、これが自分の望んでいた状況なのです。&lt;/p&gt;

&lt;p&gt;上記コンプレックスを克服すべく、まずはパタヘネ(上)を読み始めているところ。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;embedly-card&#34; data-card-key=&#34;916e111541fe433792c1330eb7eba55b&#34; data-card-type=&#34;article&#34;&gt;&lt;h4&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF%E3%81%AE%E6%A7%8B%E6%88%90%E3%81%A8%E8%A8%AD%E8%A8%88-%E7%AC%AC5%E7%89%88-%E4%B8%8A-%E3%83%87%E3%82%A4%E3%83%93%E3%83%83%E3%83%89-%E3%83%91%E3%82%BF%E3%83%BC%E3%82%BD%E3%83%B3-ebook/dp/B00UJ42A0K/ref=sr_1_1?ie=UTF8&amp;qid=1469953536&amp;sr=8-1&amp;keywords=%E3%83%91%E3%82%BF%E3%83%98%E3%83%8D&#34;&gt;Amazon.co.jp: コンピュータの構成と設計 第5版 上 電子書籍: デイビッド A パターソン, ジョン Ｌ ヘネシー, 成田 光彰: Kindleストア&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;コンピュータの構成と設計 第5版 上 &lt;a href=&#34;デイビッド A パターソン, ジョン Ｌ ヘネシー, 成田 光彰&#34;&gt;Kindle版&lt;/a&gt;: 一度購入いただいた電子書籍は、KindleおよびFire端末、スマートフォンやタブレットなど、様々な端末でもお楽しみいただけます。読み終えたページ、ブックマークやメモ、ハイライトも同期されますのでご活用ください。&lt;/p&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//cdn.embedly.com/widgets/platform.js&#34; charset=&#34;UTF-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2016/07/29 送別会</title>
      <link>http://ackintosh.github.io/blog/2016/07/29/2016-07-29/</link>
      <pubDate>Fri, 29 Jul 2016 16:24:17 +0900</pubDate>
      
      <guid>http://ackintosh.github.io/blog/2016/07/29/2016-07-29/</guid>
      <description>&lt;p&gt;2年間、派遣社員としてサービス開発・保守で活躍されたかたの送別会。
ひとつひとつ、とても丁寧に対応されていて、チームメンバーはもちろんカスタマーサポートの方々からも信頼が厚い人だった。&lt;/p&gt;

&lt;p&gt;自分は5/16入社なので一緒に働いた期間はたった2ヶ月くらいだけど、その方の姿勢を見習うようにしていた。&lt;/p&gt;

&lt;p&gt;送別会で、「ウチの社員になればいいのに」と言ってみたら&lt;/p&gt;

&lt;p&gt;「いやぁ、社員って自分には合わないんですよね」&lt;/p&gt;

&lt;p&gt;「(良くないところを見つけて) 会社を変えたくなっちゃうんですよ」&lt;/p&gt;

&lt;p&gt;と仰ってたのが印象的だった。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PHP BLT #5でLTデビュー</title>
      <link>http://ackintosh.github.io/blog/2016/07/20/phpblt5/</link>
      <pubDate>Wed, 20 Jul 2016 23:51:41 +0900</pubDate>
      
      <guid>http://ackintosh.github.io/blog/2016/07/20/phpblt5/</guid>
      <description>

&lt;p&gt;PHP界隈でアツい勉強会の１つ、PHP BLTでLTしてきました。&lt;/p&gt;

&lt;p&gt;4回目まではメルカリさんが主催でしたが&lt;a href=&#34;https://twitter.com/sotarok&#34; target=&#34;_blank&#34;&gt;@sotarok&lt;/a&gt;さんの&lt;a href=&#34;https://twitter.com/sotarok/status/740847489310461952&#34; target=&#34;_blank&#34;&gt;粋な計らいにより主催企業を持ち回す&lt;/a&gt;ことになり、第１弾としてペパボが主催するかたちになりました。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;embedly-card&#34; data-card-key=&#34;916e111541fe433792c1330eb7eba55b&#34; data-card-type=&#34;article-full&#34;&gt;&lt;h4&gt;&lt;a href=&#34;http://phpblt.connpass.com/event/35070/&#34;&gt;PHP BLT #5 (2016/07/20 19:30〜)&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;PHP BLTって？ PHP BLT は 参加者全員が Tips を発表(Lightning Talk)する というコンセプトの PHP 周辺エンジニア・Web/サーバーサイド全般の勉強会です (オーディエンス枠もありますのでご安心ください)。 PHP Burst Lightning Talk の略だってばあちゃんが言ってた。 * 1回目の様子 * 4回目の様子 ※ Potatotips をリスペクトしております！ ## 主催企業を持ち回すこととなりました 第1回目 ~ 第4回目まではメルカリさんが主催されていました。 第5回目からは、メルカリCTO @sota&amp;hellip;&lt;/p&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//cdn.embedly.com/widgets/platform.js&#34; charset=&#34;UTF-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;「PHP BLT をペパボで主催するぞ！！！！１」と、社内で issue が立ってLTを募集していたので早速応募。したのはいいけど、今までLTしたことなかったので「LTやりたいです！」と issue にコメントした瞬間から、良い感じに不安と緊張に襲われました。&lt;/p&gt;

&lt;p&gt;それから当日までの約3週間はLTの事で頭がいっぱいでした。。&lt;/p&gt;

&lt;h4 id=&#34;発表資料:31c4bb7c99bbfdf2b8a78f81eab512ac&#34;&gt;発表資料&lt;/h4&gt;

&lt;p&gt;内容は、OSSとして公開している&lt;a href=&#34;https://github.com/ackintosh/snidel/&#34; target=&#34;_blank&#34;&gt;Snidel&lt;/a&gt; の紹介です。&lt;/p&gt;

&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;9cb6a1eb77c145eba36301b9f21c26c3&#34; data-ratio=&#34;1.77777777777778&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;ペパボは全社共通のスライドテンプレート（Keynote用テーマ）があるので、スライド作りはサクサク進められて、内容を練るのと発表の練習に集中できました。テンプレート本当に便利です。&lt;/p&gt;

&lt;h4 id=&#34;感想:31c4bb7c99bbfdf2b8a78f81eab512ac&#34;&gt;感想&lt;/h4&gt;

&lt;p&gt;見てくださった方から、「LT良かった」「Snidel便利そう」と言っていただけて本当に嬉しかったです。&lt;br /&gt;
随所に散りばめた群馬ネタ（画像）もリアクションいただけてホッとしました。&lt;br /&gt;
また、Snidelが解決する問題とか特徴について整理する良い機会になりました。今回話せなかった、現状の課題とか今後の展望についても機会があったら発表したいです。&lt;/p&gt;

&lt;p&gt;局長さん、関係者のみなさま、お疲れ様でした！&lt;/p&gt;

&lt;p&gt;（追記）&lt;a href=&#34;http://uzulla.hateblo.jp/entry/2016/07/21/012002&#34; target=&#34;_blank&#34;&gt;uzullaさんのブログで「Snidelおもしろそう！」とコメントいただいた！！！&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;スライド作りのメモ:31c4bb7c99bbfdf2b8a78f81eab512ac&#34;&gt;スライド作りのメモ&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.shin1x1.com/entry/improve-the-presentation-skills-for-beginners&#34; target=&#34;_blank&#34;&gt;ここを気をつけるともっと良くなる勉強会の発表&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;この辺を気をつけるともっと良くなる

&lt;ul&gt;
&lt;li&gt;言い訳や自己卑下を入れる&lt;/li&gt;
&lt;li&gt;無理に笑いを取ろうとする&lt;/li&gt;
&lt;li&gt;何を伝えたいか分かりにくい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://codeiq.jp/magazine/2014/12/19597/&#34; target=&#34;_blank&#34;&gt;ライトニングトークに使うスライドの役割は『情報提供ではない』─澤円のプレゼン塾（その15）&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;核を作る

&lt;ul&gt;
&lt;li&gt;LTで伝えたいことを1ワードに絞る&lt;/li&gt;
&lt;li&gt;例: 製品説明の場合は、顧客が得られるメリットを厳選した1ワード&lt;/li&gt;
&lt;li&gt;その1ワードにまつわるエピソードや考察を絡めてスライドを作る&lt;/li&gt;
&lt;li&gt;LTの時間軸は未来を向く&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;スライドの作りかた

&lt;ul&gt;
&lt;li&gt;スライドの役割は「情報提供ではない」&lt;/li&gt;
&lt;li&gt;文字が多いと、見ているひとが文字を追うことに集中してしまう&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>転職イベントに登壇</title>
      <link>http://ackintosh.github.io/blog/2016/07/13/2016_07_13_event/</link>
      <pubDate>Wed, 13 Jul 2016 20:36:31 +0900</pubDate>
      
      <guid>http://ackintosh.github.io/blog/2016/07/13/2016_07_13_event/</guid>
      <description>&lt;p&gt;いままで人前でLTすらしたことないので、このようなイベントの登壇は自分のようなコミュ障には大変ハードルが高く感じますが、ちょうど入社したてということもあり、転職を考えている方に何か伝えられる事があるのではないかと思って勇気を出して臨みました。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;embedly-card&#34; data-card-key=&#34;916e111541fe433792c1330eb7eba55b&#34; data-card-type=&#34;article-full&#34;&gt;&lt;h4&gt;&lt;a href=&#34;http://forkwell.connpass.com/event/35012/&#34;&gt;満員につき増席！「いるだけで成長できる環境とは？」GMOペパボに聞く事業会社に求められる人材とは。 (2016/07/13 19:45〜)&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;イベント概要 エンジニア目線の求人サイト「Forkwell Jobs」主催イベント第18弾！ 今回は、「いるだけで成長できる環境」をコンセプトに エンジニアの人材育成や環境整備を積極的に行っているGMOペパボ社より 「事業会社での働き方」「評価されるエンジニアになるためには？」をテーマに、 企業側の視点と実際に転職された方からの視点でお話をいただきます。 &amp;hellip;&lt;/p&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//cdn.embedly.com/widgets/platform.js&#34; charset=&#34;UTF-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;イベントは二部構成。&lt;/p&gt;

&lt;p&gt;一部はサブマネージャーのライティさんから、ご自身の経歴・ペパボについて（環境、体制、評価）・どんなエンジニアと一緒に働きたいかといった内容を説明。
経歴の話の中で、SIerに就職してからWeb系の事業会社にうつる理由で、「仕事の価値をスケールさせたかった」と仰ってたのが印象的でした。&lt;/p&gt;

&lt;p&gt;二部はトーク形式で、主催のForkwellスタッフの方が進行、くまきさんと自分が登壇。
経歴・ペパボ入社のきっかけ・転職のために勉強したこと等をお話させていただきました。&lt;/p&gt;

&lt;p&gt;当日の詳細はペパボ採用担当ブログにレポートがあります。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;embedly-card&#34; data-card-key=&#34;916e111541fe433792c1330eb7eba55b&#34; data-card-type=&#34;article-full&#34;&gt;&lt;h4&gt;&lt;a href=&#34;http://pb-recruit.jugem.jp/?eid=28&#34;&gt;【転職イベント】「いるだけで成長できる環境とは？」GMOペパボに聞く事業会社に求められる人材とは。 | ペパボ採用担当ブログ&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;GMOペパボ株式会社の採用担当が求人に関するアレコレや仕事、はたらき方についてをつらつら綴ります。&lt;/p&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//cdn.embedly.com/widgets/platform.js&#34; charset=&#34;UTF-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;トークとはいっても大きな流れは事前に決めていて、用意していただいた質問事項について予め考えていて、自分の転職について振り返る良い機会になりました。&lt;/p&gt;

&lt;p&gt;ご来場いただいた方々に少しでもペパボの雰囲気とか良さが伝われば幸いです。&lt;/p&gt;

&lt;p&gt;(追記) 後日、ご来場いただいた方から twitter でメッセージをいただいて、転職活動の参考になったとのことで、大変嬉しかったです。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>転職して１ヶ月</title>
      <link>http://ackintosh.github.io/blog/2016/06/18/pepabo/</link>
      <pubDate>Sat, 18 Jun 2016 21:07:16 +0900</pubDate>
      
      <guid>http://ackintosh.github.io/blog/2016/06/18/pepabo/</guid>
      <description>

&lt;h2 id=&#34;転職:7a3904fca23102476b4b37a837af6344&#34;&gt;転職&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://pepabo.com/&#34; target=&#34;_blank&#34;&gt;GMOペパボ&lt;/a&gt;という会社に転職しました。&lt;br /&gt;
&lt;sup&gt;5&lt;/sup&gt;&amp;frasl;&lt;sub&gt;16&lt;/sub&gt; 入社なので１ヶ月くらい経ったところです。&lt;/p&gt;

&lt;p&gt;きっかけは &lt;a href=&#34;http://eventdots.jp/event/573086&#34; target=&#34;_blank&#34;&gt;ペパボテックカンファレンスEC編&lt;/a&gt; への参加で、&lt;br /&gt;
初めは &amp;ldquo;他社のECはどんなことやってるのかなぁ&amp;rdquo; と気になってフラっと行ってみたのですが&lt;br /&gt;
発表の内容に刺激をうけてペパボに興味を持って、そこから話が進んでいき運良く入社できた感じです。&lt;/p&gt;

&lt;h2 id=&#34;環境:7a3904fca23102476b4b37a837af6344&#34;&gt;環境&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://ackintosh.github.io/blog/2015/11/15/pbtech_4/&#34; target=&#34;_blank&#34;&gt;テックカンファレンスに参加した時の感想&lt;/a&gt;でも書いてるのですが、
サービスの改善に対するモチベーションが高く、改善のための技術的なチャレンジも積極的に取り組んでいます。&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;7&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2&lt;/sub&gt;(土), 3(日)に開催される &lt;a href=&#34;http://yapcasia8oji-2016mid.hachiojipm.org/&#34; target=&#34;_blank&#34;&gt;YAPC::ASIA HACHIOJI&lt;/a&gt; のトークでGMOペパボのエンジニアが５人(!!)採択されたようですので、諸々普段の取り組みがが披露されるようです。とても楽しみです。&lt;/p&gt;

&lt;p&gt;あとはレベル高いひとたちばかりです。&lt;br /&gt;
前職では中野は技術的に尖ってる方の人、みたいに見られることがあって、少なからずその状況にあぐらをかいてる的な気持ちはあったと思う(そうならないように努めていましたが)ので大変良い刺激をいただいています。&lt;br /&gt;
「オレ、大丈夫かな（やっていけるかな）」という不安がよぎることもありましたが、今は不安になってる暇があったら努力しようという気持ちです。日々、積み重ねていきます。&lt;br /&gt;
それが目的で転職したんですから。恵まれた環境に感謝しつつ、価値を出していかないと。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;ja&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;他人と自分を比べるな。自分より凄い人に劣等感を覚え嫉妬する行為も自分より劣っている人を見下し安心する行為も君にとってはマイナスの影響しか持たない。比べるなら過去の自分だ。過去の自分に打ち勝ち続ける事で人は成長するし、努力によって確実に倒し超えていけるのは過去の自分だけだ。&lt;/p&gt;&amp;mdash; Testosterone (@badassceo) &lt;a href=&#34;https://twitter.com/badassceo/status/744109449351041025&#34;&gt;2016年6月18日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&#34;近況:7a3904fca23102476b4b37a837af6344&#34;&gt;近況&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://shop-pro.jp/&#34; target=&#34;_blank&#34;&gt;カラーミーショップ&lt;/a&gt;のチームに所属して頑張っています&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tech.pepabo.com/2015/11/17/pepabo-tech-blog-has-started/&#34; target=&#34;_blank&#34;&gt;「いるだけで成長できる環境」&lt;/a&gt;にあるとおり、成長できるチャンスがたくさんあるので活用していく次第&lt;/li&gt;
&lt;li&gt;マスタリングTCP/IP読書会、プログラミング言語Go読書会に参加中&lt;/li&gt;
&lt;li&gt;PHPBLTをペパボ主催でやります。LTします！&lt;/li&gt;
&lt;li&gt;渋谷のランチは結構高いので破産しないようにワンコインランチを発掘しようと思っています&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>